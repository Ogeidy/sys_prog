PL1:

EX09:   PROC  OPTIONS  ( MAIN );
    DCL A   BIT  ( 5 )  INIT  ( ‘101’B );
    DCL B   DEC  FIXED;
    B = A;
END  EX09;  

Assembler:

EX09    START   0           #Начало программы#
        BALR    RBASE,0 	    Загрузить регистр базы             
        USING   *,RBASE 	    Назначить регистр базой  

        L		RRAB,A 		    Положить A в регистр
        					
                                Добавить приведение типов
                                Смена типа A B'00101'->F(00101)
                                Смена типа 	 F(00101)->P(5)

        ST 		RRAB,B 		    Значение из регшистра поместить в B


                            #Объявления переменных#
A       DC      B’00101’              
B       DS      P 


// Some comments //

Про строку:
    строка + управляющий блок (максимальная длина, фактическая длина)
    Для чего вообще нужны строки:
        (можно булевые операции, сравнивать, конкатенировать)
        (используется для комбинаторных преобразований)
    два вида строк:
        -битовая
        -символьная(байтовая) (не один бит, а байт для хранения кода 
            символов, нельзя булевые операции)
    
На данной архитектуре адресация - байтовая!!!

По наставлению преподавателя можно изменить заданную матиссу с 5 на 16 бит
5 -> 16 

BL0.16 -> BL16 - также можно немного изменить синтаксис объявления типов

На данной архитектуре регистры - 4 байта !!

Приведение типов:
    CVD рег, память
    
    для этого неоходимо исползовать
    буферную паямять длиной 8 байт выровненный адрес кратный 4

    кратность объявления
       |
    DS 0F - выходит на границу выравненную 4м
    buf dc PL8'0'

