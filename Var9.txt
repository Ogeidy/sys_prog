PL1:

EX09:   PROC  OPTIONS  ( MAIN );
    DCL A   BIT  ( 5 )  INIT  ( ‘101’B );
    DCL B   DEC  FIXED;
    B = A;
END  EX09;  

Assembler:

EX09    START   0		#НАЧАЛО ПРОГРАММЫ#
        BALR    RBASE,0 	- Загрузить регистр базы             
        USING   *,RBASE 	- Назначить регистр базой  

        L		RRAB,A 		- Положить A в регистр
        					
                                Добавить приведение типов
                                Смена типа A B'101'->F(101)


        CVD		BUF,RRAB	- Смена типа 	 F(101)->P(5)
        CVD		B,RRAB		- Смена типа 	 F(101)->P(5)

        ST 		RRAB,B 		- Значение из регистра поместить в B


                        #ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ#
A       DC      BL16'101' 	- Переменная типа B (двоичная текстовая строка) с действительной длинной в 16 бит
FLA		DC 		F'5'		- Максимальная длинна для созданной переменной, FLA - FixLength var A
CLA 	DC 		F'3'		- Текущая длинна, занятая символами, CLA - CurrentLength var A

A1 		DC 		FL16'0'		- Переменная типа F (двоичная переменная) для промежуточного перевода от B(binary) к P(fix dec)

B       DS      P   		- Переменная типа P (десятичная с фиксированной точкой), конечная точка преобразования

		DS 		0F          - 'хитрая' конструкция для осуществления выравнивания, перемещает указатель памяти в состояние кратное 8 (16?)
BUF		DC 		PL8'0'		- Переменная буффера, зачем?

RBASE   EQU     15          - объявление регистра RBASE
RRAB    EQU     5           - объявление регистра RRAB

END     EX09             #КОНЕЦ ПРОГРАММЫ#


// Some comments //

Про строку:
    строка + управляющий блок (максимальная длина, фактическая длина)
    Для чего вообще нужны строки:
        (можно булевые операции, сравнивать, конкатенировать)
        (используется для комбинаторных преобразований)
    два вида строк:
        -битовая
        -символьная(байтовая) (не один бит, а байт для хранения кода 
            символов, нельзя булевые операции)
    
На данной архитектуре адресация - байтовая!!!

По наставлению преподавателя можно изменить заданную матиссу с 5 на 16 бит
5 -> 16 

BL0.16 -> BL16 - также можно немного изменить синтаксис объявления типов

На данной архитектуре регистры - 4 байта !!

Приведение типов:
    CVD рег, память
    
    для этого неоходимо исползовать
    буферную паямять длиной 8 байт выровненный адрес кратный 4

    кратность объявления
       |
    DS 0F - выходит на границу выравненную 4м
    buf dc PL8'0'

